import axios from 'axios';

async function testProjectData() {
  console.log('🔍 Testing Project Data Structure...');
  
  try {
    // Test 1: Create a test user
    console.log('📋 Test 1: Create Test User');
    const testEmail = `test_project_data_${Date.now()}@example.com`;
    const testPassword = 'testpass123';
    
    let authToken = null;
    
    try {
      const signupResponse = await axios.post('https://api.opptym.com/api/auth/signup', {
        username: `test_project_data_${Date.now()}`,
        email: testEmail,
        password: testPassword,
        firstName: 'Test',
        lastName: 'ProjectData'
      }, {
        headers: {
          'x-test-mode': 'true'
        }
      });
      
      if (signupResponse.data.success) {
        console.log('✅ Test user created successfully');
        authToken = signupResponse.data.token;
      } else {
        console.log('❌ Test user creation failed');
        return;
      }
    } catch (error) {
      console.log('❌ Test user creation error:', error.message);
      return;
    }
    
    // Test 2: Create a test project
    console.log('📋 Test 2: Create Test Project');
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    let projectId = null;
    
    try {
      const projectResponse = await axios.post('https://api.opptym.com/api/projects', {
        title: 'Test Project for Data Analysis',
        url: 'https://example.com',
        email: 'test@example.com',
        category: 'Technology',
        description: 'A test project for data structure analysis'
      }, {
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'x-test-mode': 'true'
        }
      });
      
      if (projectResponse.data && projectResponse.data._id) {
        console.log('✅ Test project created successfully');
        projectId = projectResponse.data._id;
        console.log('📊 Project data structure:', JSON.stringify(projectResponse.data, null, 2));
      } else {
        console.log('❌ Test project creation failed');
        return;
      }
    } catch (error) {
      console.log('❌ Test project creation error:', error.response?.data || error.message);
      return;
    }
    
    // Test 3: Get project by ID
    console.log('📋 Test 3: Get Project by ID');
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    try {
      const getProjectResponse = await axios.get(`https://api.opptym.com/api/projects/${projectId}`, {
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'x-test-mode': 'true'
        }
      });
      
      if (getProjectResponse.data) {
        console.log('✅ Project retrieved successfully');
        console.log('📊 Full project data structure:');
        console.log(JSON.stringify(getProjectResponse.data, null, 2));
        
        // Check for SEO reports
        const project = getProjectResponse.data;
        const seoReports = [
          'metaTagReport',
          'keywordDensityReport',
          'backlinkReport',
          'brokenLinksReport',
          'sitemapReport',
          'robotsReport',
          'keywordTrackerReport',
          'pageSpeedReport',
          'schemaReport',
          'altTextReport',
          'canonicalReport',
          'mobileAuditReport',
          'competitorReport',
          'technicalAuditReport',
          'keywordResearcherReport'
        ];
        
        console.log('\n📊 SEO Reports Status:');
        seoReports.forEach(report => {
          const hasReport = project[report] && Object.keys(project[report]).length > 0;
          console.log(`  ${report}: ${hasReport ? '✅ Present' : '❌ Missing'}`);
        });
        
        // Check for submissions
        console.log('\n📊 Submissions Status:');
        if (project.submissions && project.submissions.length > 0) {
          console.log(`  ✅ Submissions present: ${project.submissions.length}`);
        } else {
          console.log('  ❌ No submissions found');
        }
        
        // Check for SEO score
        console.log('\n📊 SEO Score Status:');
        if (project.seoScore) {
          console.log(`  ✅ SEO Score present: ${project.seoScore.total || 'N/A'}`);
        } else {
          console.log('  ❌ No SEO score found');
        }
        
      } else {
        console.log('❌ Project retrieval failed');
      }
    } catch (error) {
      console.log('❌ Project retrieval error:', error.response?.data || error.message);
    }
    
    console.log('\n📊 Project Data Test Summary:');
    console.log('✅ Project creation and retrieval working');
    console.log('⚠️ SEO reports need to be generated by running SEO tools');
    console.log('⚠️ Submissions need to be created through directory submissions');
    console.log('⚠️ SEO score is calculated based on available reports');
    
  } catch (error) {
    console.error('❌ Project data test failed:', error.message);
  }
}

testProjectData();
